#Step 1.분석할 데이터가 저장된 파일을 불러와서 변수에 할당합니다.
from google.colab import files
myfile = files.upload()
import io
import pandas as pd
#pd.read_csv로 csv파일 불러오기
fish = pd.read_csv(io.BytesIO(myfile['fish_perch3.csv']) )
fish

#Step 2: 훈련용 데이터셋과 테스트용 데이터셋 나누어서 분석

from sklearn.model_selection import train_test_split
data = fish['Length']
target = fish['Weight']

훈련용_data , 테스트용_data , 훈련용_target , 테스트용_target = train_test_split(
    data , target , test_size=0.2 , random_state=40)

# Step 3. 단순회귀인지 다항회귀인지 그래프로 산포도 확인
import matplotlib.pyplot as plt
plt.plot(data,target,'o')
plt.show()

#Step 4. 데이터 값을 제곱한 컬럼을 추가합니다
import numpy as np
훈련용_data_new =np.column_stack((훈련용_data ** 2 , 훈련용_data))
테스트용_data_new =np.column_stack((테스트용_data ** 2 , 테스트용_data))
print(훈련용_data_new.shape , 테스트용_data_new.shape)

#Step 5. 분석하고 예측합니다
from sklearn.linear_model import LinearRegression
lr = LinearRegression()
lr.fit(훈련용_data_new, 훈련용_target)
print(lr.predict([[50**2,50]]))

#계수와 절편 값 확인하기
print(lr.coef_ , lr.intercept_)

#그래프로 시각화합니다
p = np.arange(15,50)

#훈련 데이터의 분포를 그립니다.
import matplotlib.pyplot as plt
plt.scatter(훈련용_data , 훈련용_target)
plt.plot(p , 1.13 * p ** 2 - 29.5 * p + 229.3)

#찾는 데이터
plt.scatter([50] , [1584.9] , marker='^')
plt.show()

# 모델의 성능 평가
print(lr.score(훈련용_data_new , 훈련용_target))
print(lr.score(테스트용_data_new , 테스트용_target))